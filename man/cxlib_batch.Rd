% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cxlib_batch.R
\name{cxlib_batch}
\alias{cxlib_batch}
\title{Simple utility to execute an R program script}
\usage{
cxlib_batch(
  x,
  options = list(logs = NULL, log.fileext = "Rout"),
  silent = FALSE
)
}
\arguments{
\item{x}{A job}

\item{options}{List of options for executing R programs}

\item{silent}{Disable verbose messaging}
}
\value{
Invisible list of actions
}
\description{
A job is a list of tasks to be executed. In its simplest form, it one or more
programs that executes in batch mode.

A job is executed in an isolated, temporary and transient working area.

Note: All paths are relative to the current R session working directory, i.e.
\code{getwd()}.

Program required inputs and output locations are annotated in the program file
using standard annotation syntax anywhere in the program file. Each annotation
is defined on a separate line starting with the comment character \verb{#}. One or
more spaces separate the annotation keyword and its value.

Program input is specified using \verb{@cx.input} followed by the input directory or
file path. If the input is a directory, all files in that directory is
included.

Program output locations is specified using the \verb{@cx.output} annotation. It is
assumed that the output location is a directory.

Only files created, updated or deleted in an annotated output directory are
returned in addition to the program log.

The function supports different execution options.

\itemize{
\item \code{logs} option is the directory where logs are stored. If the option is
\code{NULL}, the program directory is used.
\item \code{log.fileext} specifies te log file extension or suffix. Default is the
standard \code{Rout}.
}

The options can also be defined in the \code{cxlib.properties} file
(see \link[cxlib]{cxlib_config}.

Options specified in the call to \code{cxlib_batch} takes precedence over options
defined in cxlib properties.
}
\examples{

\dontrun{
# note: all paths are relative to the working directory

 
# -- run an R program
# not run

cxlib_batch( "path/to/my/program.R" )


# -- run a list of R programs
# not run

program_list <- c( "path/to/programs/program_1.R", "path/to/programs/program_2.R" )
cxlib_batch( program_list )


# -- alternate folder for logs
# not run

cxlib_batch( "path/to/my/program.R", options = list( "logs" = "path/to/logs" ) )


# -- alternate file extension for logs
# not run

cxlib_batch( "path/to/my/program.R", options = list( "log.fileext" = "log" ) )
}

}
